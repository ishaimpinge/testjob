[{"/home/rohitv/my-app/src/index.tsx":"1","/home/rohitv/my-app/src/reportWebVitals.ts":"2","/home/rohitv/my-app/src/App.tsx":"3"},{"size":500,"mtime":1632221002071,"results":"4","hashOfConfig":"5"},{"size":425,"mtime":1632221002083,"results":"6","hashOfConfig":"5"},{"size":3512,"mtime":1632373302303,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1k9wi57",{"filePath":"11","messages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/home/rohitv/my-app/src/index.tsx",[],["16","17"],"/home/rohitv/my-app/src/reportWebVitals.ts",[],"/home/rohitv/my-app/src/App.tsx",["18","19"],"import React, {useEffect, useState} from 'react';\nimport './App.css';\nfunction App(props:any) {\n    const [city,\n        setcity] = useState('');\n    const [Locationname,\n        setLocationname] = useState('');\n    const [userdata,\n        setUserdata] = useState([]);\n    const [error,\n        setError] = useState(null)\n        const value=window.location.search.split('?city=');\n       \n    const handleSubmit = (event : any) => {\n    }\n    useEffect(()=>{\n        // event.preventDefault();\n        fetch('http://api.openweathermap.org/data/2.5/forecast?q=' + value[1] + '&mode=json&units=imperial&appid=2a6ed6669671100313d8ccd388e8784e').then(async response => {\n            const isJson = response\n                .headers\n                .get('content-type')\n                ?.includes('application/json');\n            const data = isJson && await response.json();\n\n            // check for error response\n            if (!response.ok) {\n                // get error message from body or default to response status\n                const error = (data && data.message) || response.status;\n                return Promise.reject(error);\n            }\n            console.log(data);\n            setUserdata(data.list);\n            setLocationname(data.city.name);\n        }).catch(error => {\n            setError(error.toString());\n            setTimeout(() => {\n                setError(null);\n            }, 3000);\n            console.error('There was an error!', error);\n        });\n      }, [value[1]])\n\n    return (\n\n        <div className=\"App\">\n            {error\n                ? <div\n                        className=\"error\"\n                        style={{\n                        color: 'white',\n                        background: 'red',\n                        padding: '10px'\n                    }}>\n                        <i className=\"material-icons error-icon\"></i>\n                        {error}\n                    </div>\n                : null}\n\n            <form className=\"step1submit\" onSubmit={handleSubmit}>\n                    <label>Please enter the city</label>\n                <input\n                    name=\"city\"\n                    type=\"text\"\n                    value={city}\n                    onChange={e => setcity(e.target.value)}\n                    required/>\n                <button onChange={handleSubmit} className=\"btn btn-blue\">Send</button>\n            </form>\n            <h1>\n                {` ${Locationname}`}</h1>\n            {userdata && userdata.map((note : any, index) => {\n\n                return ( <> <div\n                    className=\"contdata\"\n                    style={{\n                    'border': '1px solid #ccc',\n                    'float': 'left',\n                    'width': '23%'\n                }}>\n                    <h4>\n                        {` Date : ${note.dt_txt}`}</h4>\n                        <h3>{`Temp : ${note.main.temp}`}</h3>\n                    {`Wheather : ${note.weather[0].description}`}, {`humidity : ${note.main.humidity}`}\n                    <h4 style={{\n                        'color': 'red'\n                    }}>{note.weather[0].main === 'Rain'\n                            ? 'Best day to sell an umbrella'\n                            : note.weather[0].main === 'Clouds'\n                            ? 'Best day to sell an jacket'\n                            : 'No Sell'}\n                            </h4>\n                </div> </>\n          )\n        })}\n        </div>\n    );\n}\n\nexport default App;\n",{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":41,"column":10,"nodeType":"26","endLine":41,"endColumn":20,"suggestions":"27"},{"ruleId":"24","severity":1,"message":"28","line":41,"column":11,"nodeType":"29","endLine":41,"endColumn":19},"no-native-reassign",["30"],"no-negated-in-lhs",["31"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'value'. Either include it or remove the dependency array.","ArrayExpression",["32"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","no-global-assign","no-unsafe-negation",{"desc":"33","fix":"34"},"Update the dependencies array to be: [value]",{"range":"35","text":"36"},[1499,1509],"[value]"]
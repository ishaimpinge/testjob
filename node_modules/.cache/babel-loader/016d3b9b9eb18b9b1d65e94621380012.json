{"ast":null,"code":"var _jsxFileName = \"/home/rohitv/my-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [success, setsucess] = useState(null);\n  const [error, setError] = useState(null);\n  const requestOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  fetch('http://api.openweathermap.org/geo/1.0/direct?q=London&limit=5&appid=2a6ed6669671100313d8ccd388e8784e').then(async response => {\n    var _response$headers$get;\n\n    const isJson = (_response$headers$get = response.headers.get('content-type')) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes('application/json');\n    const data = isJson && (await response.json()); // check for error response\n\n    if (!response.ok) {\n      // get error message from body or default to response status\n      const error = data && data.message || response.status;\n      return Promise.reject(error);\n    }\n\n    console.log(data);\n    setsucess(data);\n  }).catch(error => {\n    setError(error.toString());\n    console.error('There was an error!', error);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: success\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"I8SaU/U1geeA0c92oofS8as8XWI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/rohitv/my-app/src/App.tsx"],"names":["React","useState","App","success","setsucess","error","setError","requestOptions","method","headers","fetch","then","response","isJson","get","includes","data","json","ok","message","status","Promise","reject","console","log","catch","toString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACf,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBH,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM,CAACI,KAAD,EACJC,QADI,IACQL,QAAQ,CAAC,IAAD,CADtB;AAEA,QAAMM,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,KADa;AAErBC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAFY,GAAvB;AAOEC,EAAAA,KAAK,CAAC,sGAAD,CAAL,CAA8GC,IAA9G,CAAmH,MAAMC,QAAN,IAAkB;AAAA;;AAC3H,UAAMC,MAAM,4BAAGD,QAAQ,CAClBH,OADU,CAEVK,GAFU,CAEN,cAFM,CAAH,0DAAG,sBAGTC,QAHS,CAGA,kBAHA,CAAf;AAIA,UAAMC,IAAI,GAAGH,MAAM,KAAI,MAAMD,QAAQ,CAACK,IAAT,EAAV,CAAnB,CAL2H,CAO3H;;AACA,QAAI,CAACL,QAAQ,CAACM,EAAd,EAAkB;AACd;AACA,YAAMb,KAAK,GAAIW,IAAI,IAAIA,IAAI,CAACG,OAAd,IAA0BP,QAAQ,CAACQ,MAAjD;AACA,aAAOC,OAAO,CAACC,MAAR,CAAejB,KAAf,CAAP;AACH;;AACDkB,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACAZ,IAAAA,SAAS,CAACY,IAAD,CAAT;AACH,GAfP,EAeSS,KAfT,CAeepB,KAAK,IAAI;AACdC,IAAAA,QAAQ,CAACD,KAAK,CAACqB,QAAN,EAAD,CAAR;AACAH,IAAAA,OAAO,CAAClB,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACH,GAlBP;AAwBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAxCQD,G;;KAAAA,G;AA0CT,eAAeA,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nfunction App() {\nconst [success, setsucess] = useState(null);\nconst [error,\n  setError] = useState(null)\nconst requestOptions = {\n  method: 'GET',\n  headers: {\n      'Content-Type': 'application/json',\n     \n  }\n };\n  fetch('http://api.openweathermap.org/geo/1.0/direct?q=London&limit=5&appid=2a6ed6669671100313d8ccd388e8784e').then(async response => {\n            const isJson = response\n                .headers\n                .get('content-type')\n                ?.includes('application/json');\n            const data = isJson && await response.json();\n\n            // check for error response\n            if (!response.ok) {\n                // get error message from body or default to response status\n                const error = (data && data.message) || response.status;\n                return Promise.reject(error);\n            }\n            console.log(data);\n            setsucess(data);\n        }).catch(error => {\n            setError(error.toString());\n            console.error('There was an error!', error);\n        });\n\n\n \n\n\n  return (\n    <div className=\"App\">\n      {success}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
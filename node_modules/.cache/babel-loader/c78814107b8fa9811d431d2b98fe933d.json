{"ast":null,"code":"import _regeneratorRuntime from\"/home/rohitv/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/rohitv/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/rohitv/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),city=_useState2[0],setcity=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),Locationname=_useState4[0],setLocationname=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),userdata=_useState6[0],setUserdata=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),error=_useState8[0],setError=_useState8[1];var value=window.location.search.split('?city=');var handleSubmit=function handleSubmit(event){};useEffect(function(){// event.preventDefault();\nfetch('http://api.openweathermap.org/data/2.5/forecast?q='+value[1]+'&mode=json&units=imperial&appid=2a6ed6669671100313d8ccd388e8784e').then(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(response){var _response$headers$get;var isJson,data,_error;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:isJson=(_response$headers$get=response.headers.get('content-type'))===null||_response$headers$get===void 0?void 0:_response$headers$get.includes('application/json');_context.t0=isJson;if(!_context.t0){_context.next=6;break;}_context.next=5;return response.json();case 5:_context.t0=_context.sent;case 6:data=_context.t0;if(response.ok){_context.next=10;break;}// get error message from body or default to response status\n_error=data&&data.message||response.status;return _context.abrupt(\"return\",Promise.reject(_error));case 10:console.log(data);setUserdata(data.list);setLocationname(data.city.name);case 13:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}()).catch(function(error){setError(error.toString());setTimeout(function(){setError(null);},3000);console.error('There was an error!',error);});},[value[1]]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[error?/*#__PURE__*/_jsxs(\"div\",{className:\"error\",style:{color:'white',background:'red',padding:'10px'},children:[/*#__PURE__*/_jsx(\"i\",{className:\"material-icons error-icon\"}),error]}):null,/*#__PURE__*/_jsxs(\"form\",{className:\"step1submit\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"label\",{children:\"Please enter the city\"}),/*#__PURE__*/_jsx(\"input\",{name:\"city\",type:\"text\",value:city,onChange:function onChange(e){return setcity(e.target.value);},required:true}),/*#__PURE__*/_jsx(\"button\",{onChange:handleSubmit,className:\"btn btn-blue\",children:\"Send\"})]}),/*#__PURE__*/_jsx(\"h1\",{children:\" \".concat(Locationname)}),userdata&&userdata.map(function(note,index){return/*#__PURE__*/_jsxs(_Fragment,{children:[\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"contdata\",style:{'border':'1px solid #ccc','float':'left','width':'23%'},children:[/*#__PURE__*/_jsx(\"h4\",{children:\" Date : \".concat(note.dt_txt)}),/*#__PURE__*/_jsx(\"h3\",{children:\"Temp : \".concat(note.main.temp)}),\"Wheather : \".concat(note.weather[0].description),\", \",\"humidity : \".concat(note.main.humidity),/*#__PURE__*/_jsx(\"h4\",{style:{'color':'red'},children:note.weather[0].main==='Rain'?'Best day to sell an umbrella':note.weather[0].main==='Clouds'?'Best day to sell an jacket':'No Sell'})]}),\" \"]});})]});}export default App;","map":{"version":3,"sources":["/home/rohitv/my-app/src/App.tsx"],"names":["React","useEffect","useState","App","props","city","setcity","Locationname","setLocationname","userdata","setUserdata","error","setError","value","window","location","search","split","handleSubmit","event","fetch","then","response","isJson","headers","get","includes","json","data","ok","message","status","Promise","reject","console","log","list","name","catch","toString","setTimeout","color","background","padding","e","target","map","note","index","dt_txt","main","temp","weather","description","humidity"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nfunction App(props:any) {\n    const [city,\n        setcity] = useState('');\n    const [Locationname,\n        setLocationname] = useState('');\n    const [userdata,\n        setUserdata] = useState([]);\n    const [error,\n        setError] = useState(null)\n        const value=window.location.search.split('?city=');\n       \n    const handleSubmit = (event : any) => {\n    }\n    useEffect(()=>{\n        // event.preventDefault();\n        fetch('http://api.openweathermap.org/data/2.5/forecast?q=' + value[1] + '&mode=json&units=imperial&appid=2a6ed6669671100313d8ccd388e8784e').then(async response => {\n            const isJson = response\n                .headers\n                .get('content-type')\n                ?.includes('application/json');\n            const data = isJson && await response.json();\n\n            // check for error response\n            if (!response.ok) {\n                // get error message from body or default to response status\n                const error = (data && data.message) || response.status;\n                return Promise.reject(error);\n            }\n            console.log(data);\n            setUserdata(data.list);\n            setLocationname(data.city.name);\n        }).catch(error => {\n            setError(error.toString());\n            setTimeout(() => {\n                setError(null);\n            }, 3000);\n            console.error('There was an error!', error);\n        });\n      }, [value[1]])\n\n    return (\n\n        <div className=\"App\">\n            {error\n                ? <div\n                        className=\"error\"\n                        style={{\n                        color: 'white',\n                        background: 'red',\n                        padding: '10px'\n                    }}>\n                        <i className=\"material-icons error-icon\"></i>\n                        {error}\n                    </div>\n                : null}\n\n            <form className=\"step1submit\" onSubmit={handleSubmit}>\n                    <label>Please enter the city</label>\n                <input\n                    name=\"city\"\n                    type=\"text\"\n                    value={city}\n                    onChange={e => setcity(e.target.value)}\n                    required/>\n                <button onChange={handleSubmit} className=\"btn btn-blue\">Send</button>\n            </form>\n            <h1>\n                {` ${Locationname}`}</h1>\n            {userdata && userdata.map((note : any, index) => {\n\n                return ( <> <div\n                    className=\"contdata\"\n                    style={{\n                    'border': '1px solid #ccc',\n                    'float': 'left',\n                    'width': '23%'\n                }}>\n                    <h4>\n                        {` Date : ${note.dt_txt}`}</h4>\n                        <h3>{`Temp : ${note.main.temp}`}</h3>\n                    {`Wheather : ${note.weather[0].description}`}, {`humidity : ${note.main.humidity}`}\n                    <h4 style={{\n                        'color': 'red'\n                    }}>{note.weather[0].main === 'Rain'\n                            ? 'Best day to sell an umbrella'\n                            : note.weather[0].main === 'Clouds'\n                            ? 'Best day to sell an jacket'\n                            : 'No Sell'}\n                            </h4>\n                </div> </>\n          )\n        })}\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
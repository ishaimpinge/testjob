{"ast":null,"code":"var _jsxFileName = \"/home/rohitv/my-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [lat, setlatitude] = useState(null);\n  const [long, setlongitude] = useState(null);\n  const [city, setcity] = useState('');\n  const [Locationname, setLocationname] = useState('');\n  const [userdata, setUserdata] = useState([]);\n  const [error, setError] = useState(null);\n  const timessstamp = Moment().subtract(5, 'd').unix();\n  console.log(props, 'gggiii');\n\n  const handleSubmit = event => {};\n\n  useEffect(() => {\n    fetch('http://api.openweathermap.org/data/2.5/forecast?q=' + city + '&mode=json&units=imperial&appid=73748f7d2e1692455877e78259d5e3d5').then(async response => {\n      var _response$headers$get;\n\n      const isJson = (_response$headers$get = response.headers.get('content-type')) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes('application/json');\n      const data = isJson && (await response.json()); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      }\n\n      console.log(data);\n      setUserdata(data.list);\n      setLocationname(data.city.name);\n    }).catch(error => {\n      setError(error.toString());\n      setTimeout(() => {\n        setError(null);\n      }, 3000);\n      console.error('There was an error!', error);\n    });\n  }, [city]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      style: {\n        color: 'white',\n        background: 'red',\n        padding: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"material-icons error-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this), error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"step1submit\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"city\",\n        type: \"text\",\n        value: city,\n        onChange: e => setcity(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"btn btn-blue\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: ` Location Name : ${Locationname}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"GOVlmX2XF5ST9kPiSaSFRUXYU2Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/rohitv/my-app/src/App.tsx"],"names":["React","useEffect","useState","Moment","App","props","lat","setlatitude","long","setlongitude","city","setcity","Locationname","setLocationname","userdata","setUserdata","error","setError","timessstamp","subtract","unix","console","log","handleSubmit","event","fetch","then","response","isJson","headers","get","includes","data","json","ok","message","status","Promise","reject","list","name","catch","toString","setTimeout","color","background","padding","e","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Moment from 'moment';\nimport Moments from 'react-moment';\nfunction App(props : any) {\n    const [lat,\n        setlatitude] = useState(null);\n    const [long,\n        setlongitude] = useState(null);\n    const [city,\n        setcity] = useState('');\n    const [Locationname,\n        setLocationname] = useState('');\n    const [userdata,\n        setUserdata] = useState([]);\n    const [error,\n        setError] = useState(null)\n    const timessstamp = Moment()\n        .subtract(5, 'd')\n        .unix();\n    console.log(props, 'gggiii');\n    const handleSubmit = (event : any) => {\n\n    }\n\n    useEffect(() => {\n        fetch('http://api.openweathermap.org/data/2.5/forecast?q=' + city + '&mode=json&units=imperial&appid=73748f7d2e1692455877e78259d5e3d5').then(async response => {\n            const isJson = response\n                .headers\n                .get('content-type')\n                ?.includes('application/json');\n            const data = isJson && await response.json();\n\n            // check for error response\n            if (!response.ok) {\n                // get error message from body or default to response status\n                const error = (data && data.message) || response.status;\n                return Promise.reject(error);\n            }\n            console.log(data);\n            setUserdata(data.list);\n            setLocationname(data.city.name);\n        }).catch(error => {\n            setError(error.toString());\n            setTimeout(() => {\n                setError(null);\n            }, 3000);\n            console.error('There was an error!', error);\n        });\n      }, [city])\n\n    return (\n\n        <div className=\"App\">\n            {error\n                ? <div\n                        className=\"error\"\n                        style={{\n                        color: 'white',\n                        background: 'red',\n                        padding: '10px'\n                    }}>\n                        <i className=\"material-icons error-icon\"></i>\n                        {error}\n                    </div>\n                : null}\n\n            <form className=\"step1submit\" onSubmit={handleSubmit}>\n\n                <input\n                    name=\"city\"\n                    type=\"text\"\n                    value={city}\n                    onChange={e => setcity(e.target.value)}\n                    required/>\n                <button onClick={handleSubmit} className=\"btn btn-blue\">Send</button>\n            </form>\n            <h1>\n                {` Location Name : ${Locationname}`}</h1>\n            {/* {userdata && userdata.map((note : any, index) => {\n\n                return ( <> <div\n                    className=\"contdata\"\n                    style={{\n                    'border': '1px solid #ccc',\n                    'float': 'left',\n                    'width': '23%'\n                }}>\n                    <h4>\n                        {` Date : ${note.dt_txt}`}</h4>\n                    {`Wheather : ${note.weather[0].description}`}, {`humidity : ${note.main.humidity}`}\n                    <h4 style={{\n                        'color': 'red'\n                    }}>{note.weather[0].main === 'Rain'\n                            ? 'Best day to sell an umbrella'\n                            : 'Best day to sell a jacket'}</h4>\n                </div> </>\n          )\n        })} */}\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
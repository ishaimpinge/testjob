{"ast":null,"code":"var _jsxFileName = \"/home/rohitv/my-app/src/App.tsx\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [success, setsucess] = useState(null);\nconst [error, setError] = useState(null);\nconst requestOptions = {\n  method: 'GET',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\nfetch('http://api.openweathermap.org/data/2.5/onecall/timemachine?lat=60.99&lon=30.9&dt=1586468027&appid=2a6ed6669671100313d8ccd388e8784e', requestOptions).then(async response => {\n  var _response$headers$get;\n\n  const isJson = (_response$headers$get = response.headers.get('content-type')) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes('application/json');\n  const data = isJson && (await response.json()); // check for error response\n\n  if (!response.ok) {\n    // get error message from body or default to response status\n    const error = data && data.message || response.status;\n    return Promise.reject(error);\n  }\n\n  console.log(data);\n}).catch(error => {\n  setError(error.toString());\n  console.error('There was an error!', error);\n});\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/rohitv/my-app/src/App.tsx"],"names":["React","useState","success","setsucess","error","setError","requestOptions","method","headers","fetch","then","response","isJson","get","includes","data","json","ok","message","status","Promise","reject","console","log","catch","toString","App"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;;AACA,MAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBF,QAAQ,CAAC,IAAD,CAArC;AACA,MAAM,CAACG,KAAD,EACJC,QADI,IACQJ,QAAQ,CAAC,IAAD,CADtB;AAEA,MAAMK,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,KADa;AAErBC,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AAFY,CAAvB;AAOEC,KAAK,CAAC,oIAAD,EAAuIH,cAAvI,CAAL,CAA4JI,IAA5J,CAAiK,MAAMC,QAAN,IAAkB;AAAA;;AACzK,QAAMC,MAAM,4BAAGD,QAAQ,CAClBH,OADU,CAEVK,GAFU,CAEN,cAFM,CAAH,0DAAG,sBAGTC,QAHS,CAGA,kBAHA,CAAf;AAIA,QAAMC,IAAI,GAAGH,MAAM,KAAI,MAAMD,QAAQ,CAACK,IAAT,EAAV,CAAnB,CALyK,CAOzK;;AACA,MAAI,CAACL,QAAQ,CAACM,EAAd,EAAkB;AACd;AACA,UAAMb,KAAK,GAAIW,IAAI,IAAIA,IAAI,CAACG,OAAd,IAA0BP,QAAQ,CAACQ,MAAjD;AACA,WAAOC,OAAO,CAACC,MAAR,CAAejB,KAAf,CAAP;AACH;;AACDkB,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AAEH,CAfP,EAeSS,KAfT,CAeepB,KAAK,IAAI;AACdC,EAAAA,QAAQ,CAACD,KAAK,CAACqB,QAAN,EAAD,CAAR;AACAH,EAAAA,OAAO,CAAClB,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACH,CAlBP;;AAuBF,SAASsB,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KANQA,G;AAQT,eAAeA,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nconst [success, setsucess] = useState(null);\nconst [error,\n  setError] = useState(null)\nconst requestOptions = {\n  method: 'GET',\n  headers: {\n      'Content-Type': 'application/json',\n     \n  }\n };\n  fetch('http://api.openweathermap.org/data/2.5/onecall/timemachine?lat=60.99&lon=30.9&dt=1586468027&appid=2a6ed6669671100313d8ccd388e8784e', requestOptions).then(async response => {\n            const isJson = response\n                .headers\n                .get('content-type')\n                ?.includes('application/json');\n            const data = isJson && await response.json();\n\n            // check for error response\n            if (!response.ok) {\n                // get error message from body or default to response status\n                const error = (data && data.message) || response.status;\n                return Promise.reject(error);\n            }\n            console.log(data);\n       \n        }).catch(error => {\n            setError(error.toString());\n            console.error('There was an error!', error);\n        });\n\n\n \n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}